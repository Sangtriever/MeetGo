<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	
	<resultMap id="replyResultSet" type="reply">
		<result column="REPLY_NO" property="replyNo" />
		<result column="REPLY_CONTENT" property="replyContent" />
		<result column="REPLY_DATE" property="replyDate" />
		<result column="REPLY_STATUS" property="replyStatus" />
		<result column="BOARD_NO" property="boardNo" />
		<result column="USER_NO" property="userNo" />
		<result column="USER_NICKNAME" property="userNickname"/>
	
	</resultMap>
		
	<resultMap id="categorySmall" type="categorySmall">
		<result column="CATEGORY_SMALL_NO" property="categorySmallNo" />
		<result column="CATEGORY_SMALL_NAME" property="categorySmallName" />
	</resultMap>	

	<resultMap id="boardResultSet" type="board">
		<result column="BOARD_NO" property="boardNo" />
		<result column="BOARD_TITLE" property="boardTitle" />
		<result column="BOARD_CONTENT" property="boardContent" />
		<result column="BOARD_CREATE_DATE" property="createDate" /> <!-- 별칭 -->		
		<result column="BOARD_UPDATE_DATE" property="boardUpdate" /> 		
		<result column="BOARD_COUNT" property="boardCount" />	
		<result column="BOARD_TYPE" property="boardType" />	
		<result column="USER_NO" property="userNo" />		
	</resultMap>
	
	<resultMap id="boardFileResultSet" type="BoardFileDto">
		<result column="BOARD_NO" property="boardNo" />
		<result column="BOARD_TITLE" property="boardTitle" />
		<result column="BOARD_CONTENT" property="boardContent" />
		<result column="BOARD_CREATE_DATE" property="boardCreateDate" />	
		<result column="BOARD_COUNT" property="boardCount" />
		<result column="BFILE_PATH" property="BfilePath" />		
	</resultMap>
	
	 <resultMap id="memberResultSet" type="member">
	       <result column="USER_NO" property="userNo" />
	       <result column="USER_NAME" property="userName" />
	       <result column="USER_ID" property="userId" />
	       <result column="USER_PWD" property="userPwd" />
	       <result column="USER_EMAIL" property="userEmail" />
	       <result column="USER_NICKNAME" property="userNickname" />
	       <result column="USER_GENDER" property="userGender" />
	       <result column="USER_PHONE" property="userPhone" />
	       <result column="USER_PROFILE" property="userProFile" />
	       <result column="CREATE_DATE" property="createDate" />
	       <result column="ADDRESS" property="address"/>
	       <result column="LAST_ACCESS_DATE" property="lastAccessDate" />
	       <result column="ADDRESS" property="address"/>
	       <result column="USER_STATUS" property="userStatus" />
	       <result column="ENROLL_STATUS" property="enrollStatus"/>
	    </resultMap>
	
	<!-- 고수찾아요 게시글 총 갯수 -->
	<select id="selectGosuReqListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM BOARD
		 WHERE BOARD_TYPE = 1
	</select>
	
	<!-- 고수찾아요 게시판 리스트 조회 -->
	<select id="selectGosuReqList" resultMap="boardResultSet">
		SELECT BOARD_NO
		     , BOARD_TITLE
		     , TO_CHAR(BOARD_CREATE_DATE, 'YYYY-MM-DD') AS "BOARD_CREATE_DATE"
			 , BOARD_COUNT
		  FROM BOARD
		 WHERE BOARD_TYPE = 1
		 ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 고수찾아요 게시판 작성하기 서비스 -->
	<insert id="insertGosuReqBoard" parameterType="Board"
	useGeneratedKeys="true" keyColumn="BOARD_NO" keyProperty="boardNo">
			    INSERT INTO BOARD (
			        BOARD_NO,
			        BOARD_TITLE,
			        BOARD_CONTENT,
			        BOARD_CREATE_DATE,
			        USER_NO,
			        BOARD_TYPE
			        )
			         VALUES(SEQ_BOARD_NO.NEXTVAL
			         ,#{boardTitle}
			         ,#{boardContent}
			         ,SYSDATE
			         ,#{userNo}
			         ,1
			        )
			        
	</insert>	
	
	<update id="increaseGosuReqCount" parameterType="_int">
		UPDATE BOARD
		   SET BOARD_COUNT = BOARD_COUNT + 1
		 WHERE BOARD_NO = #{boardNo}
		   AND BOARD_TYPE = 1
	</update>
		
	<!-- 고수찾아요 게시글 상세 -->	
	<select id="selectGosuReqBoard" parameterType="_int" resultMap="boardResultSet">
		SELECT BOARD_NO
		     , BOARD_TITLE
		     , TO_CHAR(BOARD_CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE"
		     , BOARD_CONTENT
		  FROM BOARD
		 WHERE BOARD_NO = #{boardNo}
		   AND BOARD_TYPE = 1
	</select>
		
	<!-- 고수이미지 -->
	<insert id="insertGosuReqImg" parameterType="hashMap">
		INSERT INTO BOARD_FILE( BFILE_NO
                 , BFILE_PATH
                 , BOARD_NO
                 , BFILE_STATUS
			) VALUES ( SEQ_BOARD_FILE_NO.NEXTVAL
			         , #{filePath}
			         , #{boardNo}
			         , 1
			)
	</insert>
	
	<select id="selectGosuReqImgList" parameterType="_int" resultType="boardFile">
		SELECT BFILE_PATH AS "filePath"
		FROM BOARD_FILE
		WHERE BOARD_NO = #{boardNo}
		
	</select>
	

	
	<!-- 팁 게시판 총 갯수 -->
	<select id="selectTipListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM BOARD
		 WHERE BOARD_TYPE = 2
	</select>
	
	<!-- 팁노하우 게시판 리스트 -->
	<select id="selectTipList" resultType="BoardFileDto" >
	   SELECT B.BOARD_NO AS "boardNo"
		     , B.BOARD_TITLE AS "boardTitle"
		     , B.BOARD_CONTENT AS "boardContent"
		     , TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD') AS "boardCreateDate"
		     , B.BOARD_COUNT AS "boardCount"
		     , BF.BFILE_PATH AS "BfilePath"
		     , B.USER_NO AS "userNo"
		FROM BOARD B
		LEFT JOIN BOARD_FILE BF ON B.BOARD_NO = BF.BOARD_NO
		WHERE B.BOARD_TYPE = 2
		ORDER BY B.BOARD_NO DESC
	</select>		
	
	<!-- 팁노하우 작성하기 서비스 -->	
	<insert id="insertTipBoard" parameterType="Board" 
	useGeneratedKeys="true" keyColumn="BOARD_NO" keyProperty="boardNo">
		    INSERT INTO BOARD (
		        BOARD_NO,
		        BOARD_TITLE,
		        BOARD_CONTENT,
		        USER_NO,
		        BOARD_TYPE,
		        BOARD_CREATE_DATE
		    )
		    VALUES (
		        SEQ_BOARD_NO.NEXTVAL,
		        #{boardTitle},
		        #{boardContent},
		        #{userNo},
		        2,
				SYSDATE
		    )
		</insert>
	
	<update id="increaseTipCount" parameterType="_int">
		UPDATE BOARD
		   SET BOARD_COUNT = BOARD_COUNT + 1
		 WHERE BOARD_NO = #{boardNo}
		   AND BOARD_TYPE = 2
	</update>

		
	
	<!--  팁노하우 게시판 상세  -->
	<select id="selectTipBoard" parameterType="_int" resultType="board">
			SELECT B.BOARD_NO
		     , B.BOARD_TITLE
		     , TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD') AS "BOARD_CREATE_DATE"
		     , B.BOARD_CONTENT
		     , B.USER_NO
		     , B.BOARD_COUNT
		     , BFILE_PATH
		  FROM BOARD B
		       LEFT JOIN BOARD_FILE BF ON B.BOARD_NO = BF.BOARD_NO
		 WHERE B.BOARD_NO =  #{boardNo}
	</select>
	
	<!-- 팁노하우이미지 -->
	<insert id="insertTipImg" parameterType="hashMap">
		INSERT INTO BOARD_FILE( BFILE_NO
                 , BFILE_PATH 
                 , BOARD_NO 
                 , BFILE_STATUS
			) VALUES ( SEQ_BOARD_FILE_NO.NEXTVAL
			         , #{BfilePath}
			         , #{boardNo}
			         , 1
			)
	</insert>
	
	<select id="selectTipImgList"  resultType="BoardFileDto">
		SELECT BFILE_PATH AS "BfilePath"
		FROM BOARD_FILE
		WHERE BOARD_NO = #{boardNo}
		
	</select>	
		
		
	<select id="selectGosuReplyList" parameterType="_int" resultType="replyDto">
		 SELECT M.USER_NICKNAME AS "userNickname",
			       R.REPLY_CONTENT AS "replyContent",
			       TO_CHAR(R.REPLY_DATE, 'YYYY-MM-DD') AS "replyDate"
			FROM REPLY R
			JOIN MEMBER M ON R.USER_NO = M.USER_NO
			WHERE R.REPLY_STATUS = '1' AND R.BOARD_NO = #{boardNo}
			ORDER BY R.REPLY_NO DESC
	</select>
	<select id="selectReplyList" parameterType="_int" resultMap="replyResultSet">
			SELECT REPLY_NO
		             , BOARD_NO
		             , REPLY_CONTENT
				     , TO_CHAR(REPLY_DATE, 'YYYY-MM-DD') AS "REPLY_DATE"
				  FROM REPLY
				 WHERE REPLY_STATUS = '1'    
		         AND USER_NO = #{userNo}
				 ORDER BY REPLY_NO DESC
	</select>
	
	<insert id="insertGosuReply" parameterType="reply" >	
					INSERT INTO REPLY (
				    REPLY_NO,
				    REPLY_CONTENT,
				    BOARD_NO,
				    USER_NO,
				    REPLY_DATE,
				    REPLY_STATUS
				) VALUES (
				    SEQ_REPLY_NO.NEXTVAL,
				    #{replyContent},
				    #{boardNo},
				    #{userNo},  
				    SYSDATE,
				    1
				)
	</insert>
	
	<!-- 공지사항 게시판 게시글 총 갯수 -->
	<select id="selectNoticeListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM BOARD
		 WHERE BOARD_TYPE = 3
	</select>
	
	<!-- 공지사항 게시판 리스트 -->
	<select id="selectNoticeList" resultMap="boardResultSet" >
		SELECT BOARD_NO
		     , BOARD_TITLE
		     , BOARD_CONTENT
		     , TO_CHAR(BOARD_CREATE_DATE, 'YYYY-MM-DD') AS "BOARD_CREATE_DATE"
			 , BOARD_COUNT
		  FROM BOARD
		 WHERE BOARD_TYPE = 3
		 ORDER BY BOARD_NO DESC
	</select>		
	
	<!-- 포폴 리스트 전체카운트 -->
	<select id="countPofolList" resultType="_int">
		SELECT COUNT(*)
		  FROM POFOL
		 WHERE POFOL_STATUS = 1
	</select>
	
	<!-- 포폴 리스트 전체조회 -->
	<select id="selectPofolList" parameterType="hashMap" resultType="pofolOpt">
        SELECT P.POFOL_NO AS "pofol.pofolNo",
			   P.POFOL_TITLE AS "pofol.pofolTitle",
			   P.POFOL_VISITED AS "pofol.pofolVisited",
			   P.POFOL_STATUS AS "pofol.pofolStatus",
               P.POFOL_SERVICE AS "pofol.pofolService",
			   P.GOSU_NO AS "pofol.gosuNo",
               CS.CATEGORY_BIG_NO AS "categoryBigNo",
               CS.CATEGORY_SMALL_NAME AS "categorySmallName",
               PI.POFOL_IMG_URL AS "firstImg"
		  FROM POFOL P
          LEFT JOIN (
            SELECT GOSU_NO, CATEGORY_SMALL_NO
              FROM "GOSU-SERVICE"
          ) S ON S.CATEGORY_SMALL_NO = P.POFOL_SERVICE
          LEFT JOIN (
            SELECT CATEGORY_SMALL_NO, CATEGORY_BIG_NO, CATEGORY_SMALL_NAME
              FROM SERVICE_CATEGORY_SMALL
          ) CS ON CS.CATEGORY_SMALL_NO = S.CATEGORY_SMALL_NO
          LEFT JOIN (
	        SELECT *
	        FROM POFOL_IMG
	        WHERE (POFOL_NO, POFOL_IMG_NO) IN (
	        SELECT POFOL_NO, MIN(POFOL_IMG_NO)
	        FROM POFOL_IMG
	        GROUP BY POFOL_NO)
	        ) PI ON P.POFOL_NO = PI.POFOL_NO
        <where>
	        <choose>
	            <when test="categoryBigNo != 0">
	                AND CS.CATEGORY_BIG_NO = #{categoryBigNo}
	                AND P.POFOL_STATUS = 1
	            </when>
	            <otherwise>
	            	AND P.POFOL_STATUS = 1
	            </otherwise>
	        </choose>
	    </where>
		    <choose>
		        <when test="standard == 'recent'">
		            ORDER BY POFOL_CREATE_DATE DESC
		        </when>
		        <otherwise>
		            ORDER BY POFOL_VISITED DESC
		        </otherwise>
		    </choose>
	</select>
	
	<!-- 로그인한 회원의 카테고리 가져오기 -->
	<select id="getLoginUserCtgName" parameterType="_int" resultMap="categorySmall">
		SELECT SC.CATEGORY_SMALL_NO,
      		   SC.CATEGORY_SMALL_NAME
		  FROM SERVICE_CATEGORY_SMALL SC
		  LEFT JOIN(
		    SELECT CATEGORY_SMALL_NO, GOSU_NO
		      FROM "GOSU-SERVICE"
		  ) GS ON GS.CATEGORY_SMALL_NO = SC.CATEGORY_SMALL_NO
		  LEFT JOIN(
		    SELECT GOSU_NO, USER_NO
		      FROM GOSU
		  ) G ON G.GOSU_NO = GS.GOSU_NO
		  LEFT JOIN(
		    SELECT USER_NO
		      FROM MEMBER
		  ) M ON M.USER_NO = G.USER_NO
		  WHERE M.USER_NO = #{userNo}
	</select>

	<insert id="insertPofol" parameterType="pofol"
	useGeneratedKeys="true" keyColumn="POFOL_NO" keyProperty="pofolNo">
		INSERT INTO POFOL(POFOL_NO
                 , POFOL_SERVICE
                 , POFOL_TITLE
                 , POFOL_INTRO
                 , POFOL_PRICE
                 , POFOL_CONTENT
                 , POFOL_CREATE_DATE
                 , POFOL_STATUS
                 , GOSU_NO
		) VALUES (SEQ_POFOL_NO.NEXTVAL
		         , #{pofolService}
		         , #{pofolTitle}
		         , #{pofolIntro}
		         , #{pofolPrice}
		         , #{pofolContent}
		         , SYSDATE
		         , 1
		         , #{gosuNo}
		)
	</insert>
	
	<insert id="insertPofolImg" parameterType="hashMap">
		INSERT INTO POFOL_IMG( POFOL_IMG_NO
                 , POFOL_IMG_URL
                 , POFOL_NO
			) VALUES ( SEQ_POFOL_IMG_NO.NEXTVAL
			         , #{pofolImgUrl}
			         , #{pofolNo}
			)
	</insert>

	<select id="pofolDetail" parameterType="_int" resultType="pofolOpt">
		SELECT USER_PROFILE AS "userProfile",
		       USER_NICKNAME AS "userNickname",
		       REGION AS "gosu.region",
		       MOVE_DISTANCE AS "gosu.moveDistance",
		       P.GOSU_NO AS "gosu.gosuNo",
		       P.POFOL_NO AS "pofol.pofolNo",
		       P.POFOL_TITLE AS "pofol.pofolTitle",
		       P.POFOL_INTRO AS "pofol.pofolIntro",
		       P.POFOL_PRICE AS "pofol.pofolPrice",
		       P.POFOL_CONTENT AS "pofol.pofolContent",
	           CS.CATEGORY_SMALL_NAME AS "categorySmallName"
		  FROM POFOL P 
		  JOIN (
		  SELECT GOSU_NO, REGION, MOVE_DISTANCE
		    FROM GOSU
		  ) G ON G.GOSU_NO = P.GOSU_NO
		  JOIN (
		  SELECT USER_NO, USER_NICKNAME, USER_PROFILE
		    FROM MEMBER
		  ) M ON M.USER_NO = G.GOSU_NO
	      JOIN SERVICE_CATEGORY_SMALL CS ON CS.CATEGORY_SMALL_NO = P.POFOL_SERVICE
		  WHERE P.POFOL_NO = #{pofolNo}
	</select>
	
	<select id="pofolDetailImg" parameterType="_int" resultType="pofolImg">
		SELECT DISTINCT PI.POFOL_IMG_URL AS "pofolImgUrl",
						PI.POFOL_IMG_NO AS 	"pofolImgNo"
		  FROM POFOL_IMG PI
		  JOIN (
		  SELECT POFOL_NO
		    FROM POFOL_IMG
		  ) P ON P.POFOL_NO = PI.POFOL_NO
		  WHERE P.POFOL_NO = #{pofolNo}
	</select>
	
	<update id="increasePofolCount">
		UPDATE POFOL
		   SET POFOL_VISITED = POFOL_VISITED + 1
		 WHERE POFOL_NO = #{pofolNo}
	</update>
	
	<update id="updatePofol" parameterType="hashMap">
		UPDATE POFOL
		   SET POFOL_TITLE = #{pofolTitle}
			   , POFOL_PRICE = #{pofolPrice} 
			   , POFOL_INTRO = #{pofolIntro}
			   , POFOL_CONTENT = #{pofolContent}
		 WHERE POFOL_NO = #{pofolNo}
	</update>
	
	<update id="updatePofolImg" parameterType="hashMap">
		UPDATE POFOL_IMG
		   SET POFOL_IMG_URL = #{pofolImgUrl}
		 WHERE POFOL_IMG_NO = #{pofolImgNo}
	</update>
	
	<update id="deletePofol" parameterType="_int">
		UPDATE POFOL
		  SET POFOL_STATUS = 2
		 WHERE POFOL_NO = #{pofolNo}
	</update>
	
	<delete id="deletePofolImg" parameterType="_int">
		DELETE FROM POFOL_IMG
		WHERE POFOL_NO = #{pofolNo}
	</delete>

</mapper>








