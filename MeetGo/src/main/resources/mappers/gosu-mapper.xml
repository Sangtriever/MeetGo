<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="gosuMapper">

	<!-- 총 고수회원 수 -->
	<select id="selectGosuCount" resultType="_int">
		SELECT COUNT(*)
  		  FROM GOSU
	</select>
	
	<!-- 모든 고수 -->
	
	<!-- 지역 전체 - 서비스선택 회원수 -->
	<select id="selectAllRegionOptionResultCount" parameterType="hashMap" resultType="_int" >
		SELECT COUNT(*)
		FROM (SELECT DISTINCT G.GOSU_NO AS "gosu.gosuNo",
		       G.INTRODUCTION AS "gosu.introduction",
		       G.REGION AS "gosu.region",
		       M.USER_PROFILE AS "userProfile",
		       M.USER_NICKNAME AS "userNickname",
		       S.CATEGORY_SMALL_NO AS "categorySmallNo"
		FROM GOSU G
		LEFT JOIN (
		   SELECT USER_NO, USER_PROFILE, USER_NICKNAME
		   FROM MEMBER
		) M ON M.USER_NO = G.GOSU_NO
		LEFT JOIN (
		    SELECT GOSU_NO, CATEGORY_SMALL_NO
		    FROM "GOSU-SERVICE"
		) S ON S.GOSU_NO = G.GOSU_NO
		WHERE G.REGION LIKE #{region} || '%' AND S.CATEGORY_SMALL_NO = #{categorySmallNo})
	</select>
	
	<!-- 지역 - 서비스 선택 회원수 -->
	<select id="selectRegionOptionResultCount" parameterType="hashMap" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT DISTINCT G.GOSU_NO AS "gosu.gosuNo",
			       G.INTRODUCTION AS "gosu.introduction",
			       G.REGION AS "gosu.region",
			       M.USER_PROFILE AS "userProfile",
			       M.USER_NICKNAME AS "userNickname",
			       S.CATEGORY_SMALL_NO AS "categorySmallNo"
			FROM GOSU G
			LEFT JOIN (
			   SELECT USER_NO, USER_PROFILE, USER_NICKNAME
			   FROM MEMBER
			) M ON M.USER_NO = G.GOSU_NO
			LEFT JOIN (
			    SELECT GOSU_NO, CATEGORY_SMALL_NO
			    FROM "GOSU-SERVICE"
			) S ON S.GOSU_NO = G.GOSU_NO
			WHERE G.REGION = #{region}
	        OR G.REGION = SUBSTR(#{region}, 0, 2)
	        AND S.CATEGORY_SMALL_NO = #{categorySmallNo})
	</select>
	
	<!-- 지역 전체 - 서비스전체 회원수 -->
	<select id="selectAllRegionGosuCount" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT DISTINCT G.GOSU_NO AS "gosu.gosuNo",
			       G.INTRODUCTION AS "gosu.introduction",
			       G.REGION AS "gosu.region",
			       M.USER_PROFILE AS "userProfile",
			       M.USER_NICKNAME AS "userNickname",
			       S.CATEGORY_SMALL_NO AS "categorySmallNo"
			FROM GOSU G
			LEFT JOIN (
			   SELECT USER_NO, USER_PROFILE, USER_NICKNAME
			   FROM MEMBER
			) M ON M.USER_NO = G.GOSU_NO
			LEFT JOIN (
			    SELECT GOSU_NO, CATEGORY_SMALL_NO
			    FROM "GOSU-SERVICE"
			) S ON S.GOSU_NO = G.GOSU_NO
			WHERE G.REGION LIKE #{region} || '%')
	</select>
	
	<!-- 지역 - 서비스전체 회원수 -->
	<select id="selectRegionGosuCount" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT DISTINCT G.GOSU_NO AS "gosu.gosuNo",
			       G.INTRODUCTION AS "gosu.introduction",
			       G.REGION AS "gosu.region",
			       M.USER_PROFILE AS "userProfile",
			       M.USER_NICKNAME AS "userNickname",
			       S.CATEGORY_SMALL_NO AS "categorySmallNo"
			FROM GOSU G
			LEFT JOIN (
			   SELECT USER_NO, USER_PROFILE, USER_NICKNAME
			   FROM MEMBER
			) M ON M.USER_NO = G.GOSU_NO
			LEFT JOIN (
			    SELECT GOSU_NO, CATEGORY_SMALL_NO
			    FROM "GOSU-SERVICE"
			) S ON S.GOSU_NO = G.GOSU_NO
			WHERE G.REGION = #{region})
	</select>

	<!-- 지역 전체 - 서비스선택 -->
	<select id="selectAllRegionOptionResult" parameterType="hashMap" resultType="gosuOpt">
		SELECT DISTINCT G.GOSU_NO AS "gosu.gosuNo",
		       G.INTRODUCTION AS "gosu.introduction",
		       G.REGION AS "gosu.region",
		       M.USER_PROFILE AS "userProfile",
		       M.USER_NICKNAME AS "userNickname",
		       S.CATEGORY_SMALL_NO AS "categorySmallNo"
		FROM GOSU G
		LEFT JOIN (
		   SELECT USER_NO, USER_PROFILE, USER_NICKNAME
		   FROM MEMBER
		) M ON M.USER_NO = G.GOSU_NO
		LEFT JOIN (
		    SELECT GOSU_NO, CATEGORY_SMALL_NO
		    FROM "GOSU-SERVICE"
		) S ON S.GOSU_NO = G.GOSU_NO
		WHERE G.REGION LIKE #{region} || '%' AND S.CATEGORY_SMALL_NO = #{categorySmallNo}
	</select>
	
	<!-- 지역 - 서비스 선택 -->
	<select id="selectRegionOptionResult" parameterType="hashMap" resultType="gosuOpt">
		SELECT DISTINCT G.GOSU_NO AS "gosu.gosuNo",
		       G.INTRODUCTION AS "gosu.introduction",
		       G.REGION AS "gosu.region",
		       M.USER_PROFILE AS "userProfile",
		       M.USER_NICKNAME AS "userNickname",
		       S.CATEGORY_SMALL_NO AS "categorySmallNo"
		FROM GOSU G
		LEFT JOIN (
		   SELECT USER_NO, USER_PROFILE, USER_NICKNAME
		   FROM MEMBER
		) M ON M.USER_NO = G.GOSU_NO
		LEFT JOIN (
		    SELECT GOSU_NO, CATEGORY_SMALL_NO
		    FROM "GOSU-SERVICE"
		) S ON S.GOSU_NO = G.GOSU_NO
		WHERE G.REGION = #{region}
        OR G.REGION = SUBSTR(#{region}, 0, 2)
        AND S.CATEGORY_SMALL_NO = #{categorySmallNo}
	</select>
	
	<!-- 지역 전체 - 서비스전체 -->
	<select id="selectAllRegionGosu" parameterType="string" resultType="gosuOpt">
		SELECT DISTINCT G.GOSU_NO AS "gosu.gosuNo",
		       G.INTRODUCTION AS "gosu.introduction",
		       G.REGION AS "gosu.region",
		       M.USER_PROFILE AS "userProfile",
		       M.USER_NICKNAME AS "userNickname",
		       S.CATEGORY_SMALL_NO AS "categorySmallNo"
		FROM GOSU G
		LEFT JOIN (
		   SELECT USER_NO, USER_PROFILE, USER_NICKNAME
		   FROM MEMBER
		) M ON M.USER_NO = G.GOSU_NO
		LEFT JOIN (
		    SELECT GOSU_NO, CATEGORY_SMALL_NO
		    FROM "GOSU-SERVICE"
		) S ON S.GOSU_NO = G.GOSU_NO
		WHERE G.REGION LIKE #{region} || '%'
	</select>
	

	<insert id="insertGosu" parameterType="gosu">
		INSERT INTO GOSU(GOSU_NO
					   , INTRODUCTION
					   , EMPLOYEES
					   , BUSINESS_STATUS
					   , EDUCATION
					   , CAREER
					   , ELABORATE
					   , REGION
					   , MOVE_DISTANCE
					   , AVAILABLE_TIME
					   , USER_NO)
				  VALUES(#{gosuNo}
				  	   , #{introduction}
				  	   , #{employees}
				  	   , #{businessStatus}
				  	   , #{education}
				  	   , #{career}
				  	   , #{elaborate}
				  	   , #{region}
				  	   , #{moveDistance}
				  	   , #{availableTime}
				  	   , #{userNo})
	</insert>
	
	<insert id="insertGosuCate" parameterType="hashMap">
		INSERT INTO "GOSU-SERVICE"(GOSU_NO
							   , CATEGORY_SMALL_NO)
						  VALUES(#{gosuNo}
						  	   , #{service})
	</insert>
	
	<update id="changeStatus" parameterType="_int">
		UPDATE MEMBER
		   SET USER_STATUS = 2
		 WHERE USER_NO = #{userNo} 
	</update>

	<!-- 지역 - 서비스전체 -->
	<select id="selectRegionGosu" parameterType="string" resultType="gosuOpt">
		SELECT DISTINCT G.GOSU_NO AS "gosu.gosuNo",
		       G.INTRODUCTION AS "gosu.introduction",
		       G.REGION AS "gosu.region",
		       M.USER_PROFILE AS "userProfile",
		       M.USER_NICKNAME AS "userNickname",
		       S.CATEGORY_SMALL_NO AS "categorySmallNo"
		FROM GOSU G
		LEFT JOIN (
		   SELECT USER_NO, USER_PROFILE, USER_NICKNAME
		   FROM MEMBER
		) M ON M.USER_NO = G.GOSU_NO
		LEFT JOIN (
		    SELECT GOSU_NO, CATEGORY_SMALL_NO
		    FROM "GOSU-SERVICE"
		) S ON S.GOSU_NO = G.GOSU_NO
		WHERE G.REGION = #{region}
	</select>
	

</mapper>